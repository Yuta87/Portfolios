# .cursorrules
# Portfolio Quest（ポートフォリオゲーム）用 Cursor コーディング規約

[project]
name = "Portfolio Quest"
tech_stack = [
  "Next.js 14 App Router",
  "TypeScript 5.x",
  "Tailwind CSS",
  "Three.js / R3F",
  "Zustand",
  "Framer Motion",
  "Vercel Hosting",
  "GitHub API"
]

[structure]
folders = [
  "src/app",
  "src/components/game",
  "src/components/ui",
  "src/components/webgl",
  "src/hooks",
  "src/types",
  "src/utils",
  "src/data",
  "src/assets"
]
rules = [
  "フォルダごとに責務を明確に分離すること",
  "共通コンポーネントとゲーム用ロジックは分離",
  "外部APIとのやり取りはhooksかlibにまとめる"
]

[naming]
rules = [
  "コンポーネント: PascalCase",
  "関数・フック: camelCase",
  "定数: UPPER_SNAKE_CASE",
  "型定義: 接頭辞 'I' は使わず、目的に応じた命名",
  "ディレクトリ・ファイル名: kebab-case",
]

[typesafety]
rules = [
  "any型は禁止。必要な場合は 'unknown' を使い、型ガードで処理する",
  "props, return型, event型 すべてに明示的な型を付けること",
  "型定義はすべてsrc/types/に集約すること",
  "外部APIからのレスポンス型は受信前に明示的に定義"
]

[error_handling]
rules = [
  "try/catchブロックには必ずfallback UIやログ出力を含めること",
  "API取得時は常にnullチェックと型チェックを行うこと",
  "UIコンポーネントでは3段階の状態表示（loading / success / error）を実装すること"
]

[webgl]
rules = [
  "R3Fは必要なシーンだけに限定して使用",
  "Shaderコードはsrc/components/webgl/shaders/に配置",
  "Canvasは最小構成で、エフェクトはEffectComposerで分離",
  "スマホでのFPS低下を避けるため背景効果の密度を調整可能に"
]

[state_management]
rules = [
  "グローバルステートはZustandのみ使用",
  "UI状態（Dialogの開閉など）はlocal stateで管理",
  "Zustandではset関数にPartial<GameState>を渡す形でミューテート",
  "不要な再レンダリングを避けるためselector関数を使う"
]

[responsive]
rules = [
  "Tailwindのsm:, md:, lg:を使ってレスポンシブ対応",
  "isMobileのブール値判定でロジック分岐を明示",
  "モバイル時はバーチャルスティックUIを表示、PC時はキーボード入力を有効化"
]

[performance]
rules = [
  "再描画を減らすためにuseMemo / useCallbackを活用",
  "アセットは必要時のみロード（画像：lazy, 音声：on-demand）",
  "大量のオブジェクト（NPC, パーティクルなど）はオブジェクトプール設計で管理",
  "1秒あたり60FPSを維持する設計を基本とする"
]

[testing]
rules = [
  "主要ユーティリティ関数・Hooksにはユニットテストを書くこと",
  "ゲームロジックや状態変化にはE2Eテスト（Playwright等）を検討",
  "UIテストにはReact Testing Libraryを使用",
  "API取得やZustand storeのテストはモック化して行う"
]
